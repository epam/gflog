plugins {
    id "com.github.johnrengelman.shadow" version "6.0.0" apply false
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'junit:junit:4.12'
    }

    compileTestJava.options.encoding = 'UTF-8'

    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat = "full"
        }

        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(4) ?: 1
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        repositories {
            maven {
                url System.getenv('MAVEN_REPOSITORY')

                credentials {
                    username System.getenv('MAVEN_USERNAME')
                    password System.getenv('MAVEN_PASSWORD')
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java

                pom {
                    name = 'gflog'
                    packaging = 'jar'
                    description = 'Highly efficient garbage-free logging framework for Java 8+'
                    url = 'https://github.com/epam/GFLog'

                    scm {
                        connection = 'scm:git:https://github.com/epam/GFLog.git'
                        developerConnection = 'scm:git:https://github.com/epam/GFLog.git'
                        url = 'https://github.com/epam/GFLog.git'
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'artsiomkorzun'
                            name = 'Artsiom Korzun'
                            email = 'humanfault101@gmail.com'
                            url = 'https://github.com/artsiomkorzun'
                            organization = 'EPAM Systems'
                            organizationUrl = 'https://www.epam.com/'
                        }
                    }
                }
            }
        }

        signing {
            def signingKey = System.getenv("SIGNING_KEY")
            def signingPassword = System.getenv("SIGNING_PASSWORD")

            useInMemoryPgpKeys(signingKey, signingPassword)
            sign publishing.publications.mavenJava

            required { isReleaseVersion }
        }
    }
}

project('gflog-api') {
    dependencies {
        compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
    }
}

project('gflog-core') {
    dependencies {
        compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
        api project(':gflog-api')

        testImplementation 'org.mockito:mockito-core:3.5.11'
    }
}

project('gflog-mail') {
    dependencies {
        api project(':gflog-core')
        api 'javax.mail:mail:1.4.7'
    }
}

project('gflog-jcl') {
    dependencies {
        api project(':gflog-api')
        api 'commons-logging:commons-logging:1.2'
    }
}

project('gflog-jul') {
    dependencies {
        api project(':gflog-api')
        testImplementation project(':gflog-core')
    }
}

project('gflog-slf4j') {
    dependencies {
        api project(':gflog-api')
        api 'org.slf4j:slf4j-api:2.0.11'
        testImplementation project(':gflog-core')
    }
}

project('gflog-benchmark') {
    apply plugin: 'com.github.johnrengelman.shadow'

    shadowJar.manifest.attributes << ['Main-Class': 'org.openjdk.jmh.Main']

    dependencies {
        annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.34'
        implementation 'org.openjdk.jmh:jmh-core:1.34'
        implementation 'org.openjdk.jol:jol-core:0.16'
        implementation 'org.hdrhistogram:HdrHistogram:2.1.12'
        implementation 'net.openhft:affinity:3.21ea83'
        implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
        implementation 'com.lmax:disruptor:3.4.4'
        implementation project(':gflog-core')
    }
}

project('gflog-sample') {
    dependencies {
        implementation project(':gflog-core')
    }
}

def publishingProjects = subprojects - project('gflog-benchmark') - project('gflog-sample')
task publishAll(dependsOn: publishingProjects.collect { it.path + ":publish" }) {
    group 'publishing'
    description 'Publish All Artifacts'
}

wrapper {
    gradleVersion = '7.4.1'
    distributionType = Wrapper.DistributionType.BIN
}